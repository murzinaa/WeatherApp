// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeatherApp.DataLayer;

namespace WeatherApp.DataLayer.Migrations
{
    [DbContext(typeof(WeatherContext))]
    partial class WeatherContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WeatherApp.DataLayer.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Kyiv"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Lviv"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Kharkiv"
                        });
                });

            modelBuilder.Entity("WeatherApp.DataLayer.Entities.Temperature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("Degrees")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Temperature");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            DateTime = new DateTime(2022, 3, 15, 10, 7, 7, 77, DateTimeKind.Local).AddTicks(8983),
                            Degrees = 12.0
                        },
                        new
                        {
                            Id = 2,
                            CityId = 3,
                            DateTime = new DateTime(2022, 3, 14, 12, 2, 30, 0, DateTimeKind.Unspecified),
                            Degrees = 0.0
                        },
                        new
                        {
                            Id = 3,
                            CityId = 2,
                            DateTime = new DateTime(2022, 3, 14, 13, 30, 30, 0, DateTimeKind.Unspecified),
                            Degrees = -5.0
                        },
                        new
                        {
                            Id = 4,
                            CityId = 2,
                            DateTime = new DateTime(2022, 3, 15, 9, 20, 59, 0, DateTimeKind.Unspecified),
                            Degrees = 10.0
                        });
                });

            modelBuilder.Entity("WeatherApp.DataLayer.Entities.Temperature", b =>
                {
                    b.HasOne("WeatherApp.DataLayer.Entities.City", "City")
                        .WithMany("Temperature")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("WeatherApp.DataLayer.Entities.City", b =>
                {
                    b.Navigation("Temperature");
                });
#pragma warning restore 612, 618
        }
    }
}
